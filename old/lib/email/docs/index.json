{"repository_name":"github.com/arcage/crystal-email","body":"# EMail for Crystal\n\n[![Build Status](https://travis-ci.org/arcage/crystal-email.svg?branch=master)](https://travis-ci.org/arcage/crystal-email)\n\nSimple email sending library for the [Crystal programming language](https://crystal-lang.org).\n\nYou can:\n\n- construct an email with a plain text message, a HTML message and/or some attachment files.\n- include resources(e.g. images) used in the HTML message.\n- set multiple recipients to the email.\n- use multibyte characters(only UTF-8) in the email.\n- send the email by using local or remote SMTP server.\n- use TLS connection by **SMTP orver SSL/TLS**(new) or `STARTTLS` command.\n- use SMTP-AUTH by `AUTH PLAIN` or `AUTH LOGIN` when using TLS.\n- send multiple emails concurrently by using multiple smtp connections.\n\nYou can not:\n\n- use ESMTP features except those mentioned above.\n\n## Installation\n\nFirst, add the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  email:\n    github: arcage/crystal-email\n```\n\nThen, run `shards install`\n\n## Usage\n\nTo send a minimal email message:\n\n```crystal\nrequire \"email\"\n\n# Create email message\nemail = EMail::Message.new\nemail.from    \"your_addr@example.com\"\nemail.to      \"to@example.com\"\nemail.subject \"Subject of the mail\"\nemail.message <<-EOM\n  Message body of the mail.\n\n  --\n  Your Signature\n  EOM\n\n# Set SMTP client configuration\nconfig = EMail::Client::Config.new(\"your.mx.example.com\", 25)\n\n# Create SMTP client object\nclient = EMail::Client.new(config)\n\nclient.start do\n  # In this block, default receiver is client\n  send(email)\nend\n```\n\nThis code will output log entries to `STDOUT` as follows:\n\n```text\n2018/01/25 20:35:09 [e_mail.client/12347] INFO [EMail_Client] Start TCP session to your.mx.example.com:25\n2018/01/25 20:35:10 [e_mail.client/12347] INFO [EMail_Client] Successfully sent a message from <your_addr@example.com> to 1 recipient(s)\n2018/01/25 20:35:10 [e_mail.client/12347] INFO [EMail_Client] Close TCP session to your.mx.example.com:25\n```\n\n### Client configs\n\nYou can set some connection settings to `EMail::Client::Config` object.\n\nThat can make SMTP connection to use TLS / SMTP AUTH, or output more detailed log message.\n\nSee [EMail::Client::Config](https://www.denchu.org/crystal-email/EMail/Client/Config.html) for more details.\n\n### Email message\n\nYou can set more email headers to `EMail::Message` object.\n\nAnd, you can also send emails including attachment files, HTML message, and/or resource files related message body(e.g. image file for HTML message).\n\nSee [EMail::Message](https://www.denchu.org/crystal-email/EMail/Message.html) for more details.\n\n### Concurrent sending\n\n**Note: this feature supports the _concurrent_(not parallel) sending with only one thread.**\n\nBy using `EMail::ConcurrentSender` object, you can concurrently send multiple messages by multiple connections.\n\n```crystal\nrcpt_list = [\"a@example.com\", \"b@example.com\", \"c@example.com\", \"d@example.com\"]\n\n# Set SMTP client configuration\nconfig = EMail::Client::Config.new(\"your.mx.example.com\", 25)\n\n# Create concurrent sender object\nsender = EMail::ConcurrentSender.new(config)\n\n# Sending emails with concurrently 3 connections.\nsender.number_of_connections = 3\n\n# Sending max 10 emails by 1 connection.\nsender.messages_per_connection = 10\n\n# Start email sending.\nsender.start do\n  # In this block, default receiver is sender\n  rcpts_list.each do |rcpt_to|\n    # Create email message\n    mail = EMail::Message.new\n    mail.from \"your_addr@example.com\"\n    mail.to rcpt_to\n    mail.subject \"Concurrent email sending\"\n    mail.message \"message to #{rcpt_to}\"\n    # Enqueue the email to sender\n    enqueue mail\n  end\nend\n```\n\nSee [EMail::ConcurrentSender](https://www.denchu.org/crystal-email/EMail/ConcurrentSender.html) for more details.\n\n## Logging\n\nThe v0.34.0 of Crystal language has drastic changes in the logging functions. To fit it, the v0.5.0 of this shard also changes the logging behaviour.\n\nYou can use two kinds of logger(`Log` type object), the **default logger** and the **client specific logger**.\n\nThe **default logger** is declered on the `EMail::Client` type. It can be got by `EMail::Client.log`, and change its behavior by `EMail::Client.log_***=` methods.\n\nOn the other hand, the **client specific logger** will be set to `EMail::Client` instance itself by `EMail::Client::Config` setting. With this, you can use your own logger for the `EMail::Client` object.\n\nIf the `EMail::Client` object has the **client specific logger**, the client use it to output the log entries. Otherwise, the client use the **default logger**.\n\nSee [EMail::Client](https://www.denchu.org/crystal-email/EMail/Client.html) and [EMail::Client::Config](https://www.denchu.org/crystal-email/EMail/Client/Config.html) for more details.\n\n### Debug log\n\nWhen you set the log level to `Log::Severity::Debug`, you can see all of the SMTP commands and the resposes in the log entries.\n\n```crystal\nEMail::Client.log_level = Log::Severity::Debug\n```\n\nDebug log are very useful to check how SMTP session works.\n\nBut, in the case of using SMTP AUTH, the debug log includes Base64 encoded user ID and passowrd. You should remenber that anyone can decode the authentication information from the debug log. And, you should use that **very carefully**.\n\n## Owner\n\n- [arcage](https://github.com/arcage) ʕ·ᴥ·ʔAKJ - creator, maintainer\n\n## Contributors\n\nThank you for valuable contributions.\n\n- [Contributors](https://github.com/arcage/crystal-email/graphs/contributors)\n","program":{"html_id":"github.com/arcage/crystal-email/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/arcage/crystal-email","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/arcage/crystal-email/EMail","path":"EMail.html","kind":"module","full_name":"EMail","name":"EMail","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"email/address.cr","line_number":2,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/address.cr"},{"filename":"email/concurrent_sender.cr","line_number":155,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/concurrent_sender.cr"},{"filename":"email/mimetype.cr","line_number":1,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/mimetype.cr"},{"filename":"email.cr","line_number":10,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_SMTP_PORT","name":"DEFAULT_SMTP_PORT","value":"25","doc":null,"summary":null},{"id":"VERSION","name":"VERSION","value":"\"0.6.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"send(config:EMail::Client::Config,&)-class-method","html_id":"send(config:EMail::Client::Config,&amp;)-class-method","name":"send","doc":"Send one email with given client settings as EMail::Client::Config object.\n\n```crystal\nconfig = EMail::Client::Config.new(\"your.mx.server.name\", 587)\nconfig.use_tls\nconfig.use_auth(\"your_id\", \"your_password\")\n\nEMail.send(config) do\n  # In this block, default receiver is EMail::Message object\n  from \"your@mail.addr\"\n  to \"to@some.domain\"\n  subject \"Subject of the mail\"\n\n  message <<-EOM\n    Message body of the mail.\n\n    --\n    Your Signature\n    EOM\nend\n```","summary":"<p>Send one email with given client settings as EMail::Client::Config object.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"EMail::Client::Config"}],"args_string":"(config : EMail::Client::Config, &)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email.cr#L38","def":{"name":"send","args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"EMail::Client::Config"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"message = Message.new\nwith message yield\n(EMail::Client.new(config)).start do\n  send(message)\nend\n"}},{"id":"send(*args,**named_args,&)-class-method","html_id":"send(*args,**named_args,&amp;)-class-method","name":"send","doc":"Send one email with given client settings as several arguments.\n\nAvairable arguments are same as `EMail::Client::Conifg.create` method.\n```crystal\nEMail.send(\"your.mx.server.name\", 578,\n  use_tle: true,\n  auth: {\"your_id\", \"your_password\"}) do\n  # In this block, default receiver is EMail::Message object\n  from \"your@mail.addr\"\n  to \"to@some.domain\"\n  subject \"Subject of the mail\"\n\n  message <<-EOM\n    Message body of the mail.\n\n    --\n    Your Signature\n    EOM\nend\n```","summary":"<p>Send one email with given client settings as several arguments.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **named_args, &)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email.cr#L66","def":{"name":"send","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"config = EMail::Client::Config.create(*args, **named_args)\nmessage = Message.new\nwith message yield\n(EMail::Client.new(config)).start do\n  send(message)\nend\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/arcage/crystal-email/EMail/Client","path":"EMail/Client.html","kind":"class","full_name":"EMail::Client","name":"Client","abstract":false,"superclass":{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/arcage/crystal-email/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"email/client/config.cr","line_number":1,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr"},{"filename":"email/client.cr","line_number":17,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail","kind":"module","full_name":"EMail","name":"EMail"},"doc":"SMTP client object.\n\n### Client configuration\n\nEMail::Client::Config object is used to set client configrations.\n\n### Logging\n\nWithout client specific logger in EMail::Client::Config, all EMail::Client objects use the default logger.\n\nThe default logger can be got by EMail::Client.log\nYou can set log level, output IO, and log formatter for the default logger by using EMail::Client.log_level=, EMail::Client.log_io=, EMail::Client.log_formatter= methods respectively.\n","summary":"<p>SMTP client object.</p>","class_methods":[{"id":"log:Log-class-method","html_id":"log:Log-class-method","name":"log","doc":"Get default logger([Log](https://crystal-lang.org/api/OpenSSL/Log.html) type object) to output SMTP log.","summary":"<p>Get default logger(<a href=\"https://crystal-lang.org/api/OpenSSL/Log.html\" target=\"_blank\">Log</a> type object) to output SMTP log.</p>","abstract":false,"args":[],"args_string":" : Log","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client.cr#L36","def":{"name":"log","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Log","visibility":"Public","body":"@@log"}},{"id":"log_formatter=(new_formatter:Log::Formatter)-class-method","html_id":"log_formatter=(new_formatter:Log::Formatter)-class-method","name":"log_formatter=","doc":"Set log formatter for default logger.","summary":"<p>Set log formatter for default logger.</p>","abstract":false,"args":[{"name":"new_formatter","doc":null,"default_value":"","external_name":"new_formatter","restriction":"Log::Formatter"}],"args_string":"(new_formatter : Log::Formatter)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client.cr#L55","def":{"name":"log_formatter=","args":[{"name":"new_formatter","doc":null,"default_value":"","external_name":"new_formatter","restriction":"Log::Formatter"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (log_backend = @@log.backend).is_a?(Log::IOBackend)\n  log_backend.formatter = new_formatter\nend\nnil\n"}},{"id":"log_io=(new_io:IO)-class-method","html_id":"log_io=(new_io:IO)-class-method","name":"log_io=","doc":"Set log io for default logger.","summary":"<p>Set log io for default logger.</p>","abstract":false,"args":[{"name":"new_io","doc":null,"default_value":"","external_name":"new_io","restriction":"IO"}],"args_string":"(new_io : IO)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client.cr#L47","def":{"name":"log_io=","args":[{"name":"new_io","doc":null,"default_value":"","external_name":"new_io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (log_backend = @@log.backend).is_a?(Log::IOBackend)\n  log_backend.io = new_io\nend\nnil\n"}},{"id":"log_level=(new_level:Log::Severity)-class-method","html_id":"log_level=(new_level:Log::Severity)-class-method","name":"log_level=","doc":"Set log level for default logger.","summary":"<p>Set log level for default logger.</p>","abstract":false,"args":[{"name":"new_level","doc":null,"default_value":"","external_name":"new_level","restriction":"Log::Severity"}],"args_string":"(new_level : Log::Severity)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client.cr#L41","def":{"name":"log_level=","args":[{"name":"new_level","doc":null,"default_value":"","external_name":"new_level","restriction":"Log::Severity"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@log.level = new_level\nnil\n"}}],"constructors":[{"id":"new(config:EMail::Client::Config,number=nil)-class-method","html_id":"new(config:EMail::Client::Config,number=nil)-class-method","name":"new","doc":"Creates smtp client object by EMail::Client::Config object.","summary":"<p>Creates smtp client object by EMail::Client::Config object.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"EMail::Client::Config"},{"name":"number","doc":null,"default_value":"nil","external_name":"number","restriction":""}],"args_string":"(config : EMail::Client::Config, number = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client.cr#L89","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"EMail::Client::Config"},{"name":"number","doc":null,"default_value":"nil","external_name":"number","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(config, number)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"config:EMail::Client::Config-instance-method","html_id":"config:EMail::Client::Config-instance-method","name":"config","doc":"Gets cliet config object.","summary":"<p>Gets cliet config object.</p>","abstract":false,"args":[],"args_string":" : EMail::Client::Config","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client.cr#L86","def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"EMail::Client::Config","visibility":"Public","body":"@config"}},{"id":"send(mail:EMail::Message):Bool-instance-method","html_id":"send(mail:EMail::Message):Bool-instance-method","name":"send","doc":"Send a email message\n\nYou can call this only in the block of the `EMail::Client#start` method.\nThis retruns sending result as Bool(`true` for success, `false` for fail).","summary":"<p>Send a email message</p>","abstract":false,"args":[{"name":"mail","doc":null,"default_value":"","external_name":"mail","restriction":"EMail::Message"}],"args_string":"(mail : EMail::Message) : Bool","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client.cr#L178","def":{"name":"send","args":[{"name":"mail","doc":null,"default_value":"","external_name":"mail","restriction":"EMail::Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if @started\nelse\n  raise(EMail::Error::ClientError.new(\"Email client has not been started\"))\nend\n@command_history.clear\nmail = mail_validate!(mail)\nmail_from = mail.mail_from\nrecipients = mail.recipients\nif ((smtp_rset && (smtp_mail(mail_from))) && (smtp_rcpt(recipients))) && (smtp_data(mail.data))\n  log_info(\"Successfully sent a message from <#{mail_from.addr}> to #{recipients.size} recipient(s)\")\n  return true\nelse\n  log_error(\"Failed sending message for some reason\")\n  if on_failed = @config.on_failed\n    on_failed.call(mail, @command_history)\n  end\n  return false\nend\n"}},{"id":"start(&)-instance-method","html_id":"start(&amp;)-instance-method","name":"start","doc":"Start SMTP session.\n\nIn the block, the default receiver will be `self`.","summary":"<p>Start SMTP session.</p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client.cr#L107","def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  ready_to_send\n  status_code, _ = smtp_responce(\"CONN\")\n  if (((status_code == \"220\") && smtp_helo) && smtp_starttls) && smtp_auth\n    @started = true\n    with self yield\n    @started = false\n  else\n    log_error(\"Failed in connecting for some reason\")\n  end\n  smtp_quit\nrescue error\n  fatal_error(error)\nensure\n  begin\n    close_socket\n  rescue error\n    fatal_error(error)\n  end\nend"}}],"macros":[],"types":[{"html_id":"github.com/arcage/crystal-email/EMail/Client/Config","path":"EMail/Client/Config.html","kind":"class","full_name":"EMail::Client::Config","name":"Config","abstract":false,"superclass":{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/arcage/crystal-email/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"email/client/config.cr","line_number":91,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail/Client","kind":"class","full_name":"EMail::Client","name":"Client"},"doc":"SMTP client setting object.\n\n```crystal\n# Create config object with the SMTP server FQDN(or IP address), port number, and helo domain.\nconfig = EMail::Client::Config.new(\"your.mx.example.com\", 587, helo_domain: \"your.host.example.com\")\n```\n\n### TLS settings\n\n```crystal\n# Use SMTP over SSL/TLS\nconfig.use_tls(TLSMode::SMTPS)\n\n# Use STARTTLS command to send email\nconfig.use_tls(TLSMode::STARTTLS)\n\n# OpenSSL::SSL::Context::Client object for STARTTLS commands.\nconfig.tls_context\n\n# Disable TLS1.1 or lower protocols.\nconfig.tls_context.add_options(OpenSSL::SSL::Options::NO_SSL_V2 | OpenSSL::SSL::Options::NO_SSL_V3 | OpenSSL::SSL::Options::NO_TLS_V1 | OpenSSL::SSL::Options::NO_TLS_V1_1)\n\n# Set OpenSSL verification mode to skip certificate verification.\nconfig.tls_context.verify_mode = OpenSSL::SSL::VerifyMode::NONE\n```\n\n### SMTP authentication\n\n```crystal\nconfig.use_auth(\"id\", \"password\")\n```\n\n### Logging\n\n```crystal\n# Use the client specific(non-default) logger.\nconfig.log = Log.for(\"your_log_source\")\n```\n\n### Error handling\n\n```crystal\n# Set SMTP error handler.\n# Default: nil\nconfig.on_failed = EMail::Client::OnFailedProc.new do |mail, command_history|\n  puts mail.data\n  puts \"\"\n  puts command_history.join(\"\\n\")\nend\n\n# Set fatal error handler.\n# Default: nil\nconfig.on_fatal_error = EMail::Client::OnFatalErrorProc.new do |error|\n  puts error\nend\n```\n\n### Connection timeouts\n\n```crystal\nconfig.connect_timeout = 1 # sec\nconfig.read_timeout = 1    # sec\nconfig.write_timeout = 1   # sec\nconfig.dns_timeout = 1     # sec\n```\n\n### Misc\n\n```crystal\n# Set email client name, used in log entries and Message-ID headers.\n# Default: \"EMail_Client\"\nconfig.name = \"your_app_name\"\n```\n","summary":"<p>SMTP client setting object.</p>","class_methods":[{"id":"create(host,port=EMail::DEFAULT_SMTP_PORT,*,client_name:String?=nil,helo_domain:String,on_failed:EMail::Client::OnFailedProc?=nil,on_fatal_error:EMail::Client::OnFatalErrorProc?=nil,tls_verify_mode:OpenSSL::SSL::VerifyMode?=nil,use_tls:TLSMode=TLSMode::NONE,auth:Tuple(String,String)?=nil,log:Log?=nil,dns_timeout:Int32?=nil,connect_timeout:Int32?=nil,read_timeout:Int32?=nil,write_timeout:Int32?=nil)-class-method","html_id":"create(host,port=EMail::DEFAULT_SMTP_PORT,*,client_name:String?=nil,helo_domain:String,on_failed:EMail::Client::OnFailedProc?=nil,on_fatal_error:EMail::Client::OnFatalErrorProc?=nil,tls_verify_mode:OpenSSL::SSL::VerifyMode?=nil,use_tls:TLSMode=TLSMode::NONE,auth:Tuple(String,String)?=nil,log:Log?=nil,dns_timeout:Int32?=nil,connect_timeout:Int32?=nil,read_timeout:Int32?=nil,write_timeout:Int32?=nil)-class-method","name":"create","doc":"Returns `EMail::Client::Config` object with given settings.\n\n- `use_tls: tls_mode` -> `#use_tls(tls_mode)`\n- `auth: {\"id\", \"password\"}` -> `#use_auth(\"id\", \"password\")`\n\nOther optional arguments set value to the property that has the same name.","summary":"<p>Returns <code><a href=\"../../EMail/Client/Config.html\">EMail::Client::Config</a></code> object with given settings.</p>","abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":""},{"name":"port","doc":null,"default_value":"EMail::DEFAULT_SMTP_PORT","external_name":"port","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"client_name","doc":null,"default_value":"nil","external_name":"client_name","restriction":"String | ::Nil"},{"name":"helo_domain","doc":null,"default_value":"","external_name":"helo_domain","restriction":"String"},{"name":"on_failed","doc":null,"default_value":"nil","external_name":"on_failed","restriction":"EMail::Client::OnFailedProc | ::Nil"},{"name":"on_fatal_error","doc":null,"default_value":"nil","external_name":"on_fatal_error","restriction":"EMail::Client::OnFatalErrorProc | ::Nil"},{"name":"tls_verify_mode","doc":null,"default_value":"nil","external_name":"tls_verify_mode","restriction":"OpenSSL::SSL::VerifyMode | ::Nil"},{"name":"use_tls","doc":null,"default_value":"TLSMode::NONE","external_name":"use_tls","restriction":"TLSMode"},{"name":"auth","doc":null,"default_value":"nil","external_name":"auth","restriction":"Tuple(String, String) | ::Nil"},{"name":"log","doc":null,"default_value":"nil","external_name":"log","restriction":"Log | ::Nil"},{"name":"dns_timeout","doc":null,"default_value":"nil","external_name":"dns_timeout","restriction":"Int32 | ::Nil"},{"name":"connect_timeout","doc":null,"default_value":"nil","external_name":"connect_timeout","restriction":"Int32 | ::Nil"},{"name":"read_timeout","doc":null,"default_value":"nil","external_name":"read_timeout","restriction":"Int32 | ::Nil"},{"name":"write_timeout","doc":null,"default_value":"nil","external_name":"write_timeout","restriction":"Int32 | ::Nil"}],"args_string":"(host, port = <span class=\"t\">EMail</span><span class=\"t\">::</span><span class=\"t\">DEFAULT_SMTP_PORT</span>, *, client_name : String? = <span class=\"n\">nil</span>, helo_domain : String, on_failed : EMail::Client::OnFailedProc? = <span class=\"n\">nil</span>, on_fatal_error : EMail::Client::OnFatalErrorProc? = <span class=\"n\">nil</span>, tls_verify_mode : OpenSSL::SSL::VerifyMode? = <span class=\"n\">nil</span>, use_tls : TLSMode = <span class=\"t\">TLSMode</span><span class=\"t\">::</span><span class=\"t\">NONE</span>, auth : Tuple(String, String)? = <span class=\"n\">nil</span>, log : Log? = <span class=\"n\">nil</span>, dns_timeout : Int32? = <span class=\"n\">nil</span>, connect_timeout : Int32? = <span class=\"n\">nil</span>, read_timeout : Int32? = <span class=\"n\">nil</span>, write_timeout : Int32? = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L147","def":{"name":"create","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":""},{"name":"port","doc":null,"default_value":"EMail::DEFAULT_SMTP_PORT","external_name":"port","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"client_name","doc":null,"default_value":"nil","external_name":"client_name","restriction":"String | ::Nil"},{"name":"helo_domain","doc":null,"default_value":"","external_name":"helo_domain","restriction":"String"},{"name":"on_failed","doc":null,"default_value":"nil","external_name":"on_failed","restriction":"EMail::Client::OnFailedProc | ::Nil"},{"name":"on_fatal_error","doc":null,"default_value":"nil","external_name":"on_fatal_error","restriction":"EMail::Client::OnFatalErrorProc | ::Nil"},{"name":"tls_verify_mode","doc":null,"default_value":"nil","external_name":"tls_verify_mode","restriction":"OpenSSL::SSL::VerifyMode | ::Nil"},{"name":"use_tls","doc":null,"default_value":"TLSMode::NONE","external_name":"use_tls","restriction":"TLSMode"},{"name":"auth","doc":null,"default_value":"nil","external_name":"auth","restriction":"Tuple(String, String) | ::Nil"},{"name":"log","doc":null,"default_value":"nil","external_name":"log","restriction":"Log | ::Nil"},{"name":"dns_timeout","doc":null,"default_value":"nil","external_name":"dns_timeout","restriction":"Int32 | ::Nil"},{"name":"connect_timeout","doc":null,"default_value":"nil","external_name":"connect_timeout","restriction":"Int32 | ::Nil"},{"name":"read_timeout","doc":null,"default_value":"nil","external_name":"read_timeout","restriction":"Int32 | ::Nil"},{"name":"write_timeout","doc":null,"default_value":"nil","external_name":"write_timeout","restriction":"Int32 | ::Nil"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"config = new(host, port, helo_domain: helo_domain)\nif client_name\n  config.client_name = client_name\nend\nconfig.on_failed = on_failed\nif on_fatal_error\n  config.on_fatal_error = on_fatal_error\nend\nif tls_verify_mode\n  config.tls_context.verify_mode = tls_verify_mode\nend\nconfig.use_tls(use_tls)\nconfig.log = log\nif auth\n  config.use_auth(auth[0], auth[1])\nend\nif dns_timeout\n  config.dns_timeout = dns_timeout\nend\nif connect_timeout\n  config.connect_timeout = connect_timeout\nend\nif read_timeout\n  config.read_timeout = read_timeout\nend\nif write_timeout\n  config.write_timeout = write_timeout\nend\nconfig\n"}},{"id":"create(host,port=EMail::DEFAULT_SMTP_PORT,*,client_name:String?=nil,on_failed:EMail::Client::OnFailedProc?=nil,on_fatal_error:EMail::Client::OnFatalErrorProc?=nil,tls_verify_mode:OpenSSL::SSL::VerifyMode?=nil,use_tls:TLSMode=TLSMode::NONE,auth:Tuple(String,String)?=nil,log:Log?=nil,dns_timeout:Int32?=nil,connect_timeout:Int32?=nil,read_timeout:Int32?=nil,write_timeout:Int32?=nil)-class-method","html_id":"create(host,port=EMail::DEFAULT_SMTP_PORT,*,client_name:String?=nil,on_failed:EMail::Client::OnFailedProc?=nil,on_fatal_error:EMail::Client::OnFatalErrorProc?=nil,tls_verify_mode:OpenSSL::SSL::VerifyMode?=nil,use_tls:TLSMode=TLSMode::NONE,auth:Tuple(String,String)?=nil,log:Log?=nil,dns_timeout:Int32?=nil,connect_timeout:Int32?=nil,read_timeout:Int32?=nil,write_timeout:Int32?=nil)-class-method","name":"create","doc":"Returns `EMail::Client::Config` object with given settings.\n\n- `use_tls: tls_mode` -> `#use_tls(tls_mode)`\n- `auth: {\"id\", \"password\"}` -> `#use_auth(\"id\", \"password\")`\n\nOther optional arguments set value to the property that has the same name.","summary":"<p>Returns <code><a href=\"../../EMail/Client/Config.html\">EMail::Client::Config</a></code> object with given settings.</p>\n\n<p><span class=\"flag red\">DEPRECATED</span>  At the next version, helo_domain option will be required argumnent.</p>\n\n","abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":""},{"name":"port","doc":null,"default_value":"EMail::DEFAULT_SMTP_PORT","external_name":"port","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"client_name","doc":null,"default_value":"nil","external_name":"client_name","restriction":"String | ::Nil"},{"name":"on_failed","doc":null,"default_value":"nil","external_name":"on_failed","restriction":"EMail::Client::OnFailedProc | ::Nil"},{"name":"on_fatal_error","doc":null,"default_value":"nil","external_name":"on_fatal_error","restriction":"EMail::Client::OnFatalErrorProc | ::Nil"},{"name":"tls_verify_mode","doc":null,"default_value":"nil","external_name":"tls_verify_mode","restriction":"OpenSSL::SSL::VerifyMode | ::Nil"},{"name":"use_tls","doc":null,"default_value":"TLSMode::NONE","external_name":"use_tls","restriction":"TLSMode"},{"name":"auth","doc":null,"default_value":"nil","external_name":"auth","restriction":"Tuple(String, String) | ::Nil"},{"name":"log","doc":null,"default_value":"nil","external_name":"log","restriction":"Log | ::Nil"},{"name":"dns_timeout","doc":null,"default_value":"nil","external_name":"dns_timeout","restriction":"Int32 | ::Nil"},{"name":"connect_timeout","doc":null,"default_value":"nil","external_name":"connect_timeout","restriction":"Int32 | ::Nil"},{"name":"read_timeout","doc":null,"default_value":"nil","external_name":"read_timeout","restriction":"Int32 | ::Nil"},{"name":"write_timeout","doc":null,"default_value":"nil","external_name":"write_timeout","restriction":"Int32 | ::Nil"}],"args_string":"(host, port = <span class=\"t\">EMail</span><span class=\"t\">::</span><span class=\"t\">DEFAULT_SMTP_PORT</span>, *, client_name : String? = <span class=\"n\">nil</span>, on_failed : EMail::Client::OnFailedProc? = <span class=\"n\">nil</span>, on_fatal_error : EMail::Client::OnFatalErrorProc? = <span class=\"n\">nil</span>, tls_verify_mode : OpenSSL::SSL::VerifyMode? = <span class=\"n\">nil</span>, use_tls : TLSMode = <span class=\"t\">TLSMode</span><span class=\"t\">::</span><span class=\"t\">NONE</span>, auth : Tuple(String, String)? = <span class=\"n\">nil</span>, log : Log? = <span class=\"n\">nil</span>, dns_timeout : Int32? = <span class=\"n\">nil</span>, connect_timeout : Int32? = <span class=\"n\">nil</span>, read_timeout : Int32? = <span class=\"n\">nil</span>, write_timeout : Int32? = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L174","def":{"name":"create","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":""},{"name":"port","doc":null,"default_value":"EMail::DEFAULT_SMTP_PORT","external_name":"port","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"client_name","doc":null,"default_value":"nil","external_name":"client_name","restriction":"String | ::Nil"},{"name":"on_failed","doc":null,"default_value":"nil","external_name":"on_failed","restriction":"EMail::Client::OnFailedProc | ::Nil"},{"name":"on_fatal_error","doc":null,"default_value":"nil","external_name":"on_fatal_error","restriction":"EMail::Client::OnFatalErrorProc | ::Nil"},{"name":"tls_verify_mode","doc":null,"default_value":"nil","external_name":"tls_verify_mode","restriction":"OpenSSL::SSL::VerifyMode | ::Nil"},{"name":"use_tls","doc":null,"default_value":"TLSMode::NONE","external_name":"use_tls","restriction":"TLSMode"},{"name":"auth","doc":null,"default_value":"nil","external_name":"auth","restriction":"Tuple(String, String) | ::Nil"},{"name":"log","doc":null,"default_value":"nil","external_name":"log","restriction":"Log | ::Nil"},{"name":"dns_timeout","doc":null,"default_value":"nil","external_name":"dns_timeout","restriction":"Int32 | ::Nil"},{"name":"connect_timeout","doc":null,"default_value":"nil","external_name":"connect_timeout","restriction":"Int32 | ::Nil"},{"name":"read_timeout","doc":null,"default_value":"nil","external_name":"read_timeout","restriction":"Int32 | ::Nil"},{"name":"write_timeout","doc":null,"default_value":"nil","external_name":"write_timeout","restriction":"Int32 | ::Nil"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"config = new(host, port)\nif client_name\n  config.client_name = client_name\nend\nconfig.on_failed = on_failed\nif on_fatal_error\n  config.on_fatal_error = on_fatal_error\nend\nif tls_verify_mode\n  config.tls_context.verify_mode = tls_verify_mode\nend\nconfig.use_tls(use_tls)\nconfig.log = log\nif auth\n  config.use_auth(auth[0], auth[1])\nend\nif dns_timeout\n  config.dns_timeout = dns_timeout\nend\nif connect_timeout\n  config.connect_timeout = connect_timeout\nend\nif read_timeout\n  config.read_timeout = read_timeout\nend\nif write_timeout\n  config.write_timeout = write_timeout\nend\nconfig\n"}}],"constructors":[{"id":"new(host,port=EMail::DEFAULT_SMTP_PORT,*,helo_domain=nil)-class-method","html_id":"new(host,port=EMail::DEFAULT_SMTP_PORT,*,helo_domain=nil)-class-method","name":"new","doc":"Creates instance with minimam setting.","summary":"<p>Creates instance with minimam setting.</p>","abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":""},{"name":"port","doc":null,"default_value":"EMail::DEFAULT_SMTP_PORT","external_name":"port","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"helo_domain","doc":null,"default_value":"nil","external_name":"helo_domain","restriction":""}],"args_string":"(host, port = <span class=\"t\">EMail</span><span class=\"t\">::</span><span class=\"t\">DEFAULT_SMTP_PORT</span>, *, helo_domain = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L200","def":{"name":"new","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":""},{"name":"port","doc":null,"default_value":"EMail::DEFAULT_SMTP_PORT","external_name":"port","restriction":""},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"helo_domain","doc":null,"default_value":"nil","external_name":"helo_domain","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(host, port, helo_domain: helo_domain)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"auth_id-instance-method","html_id":"auth_id-instance-method","name":"auth_id","doc":"Returns authentication id when using SMTP AUTH.","summary":"<p>Returns authentication id when using SMTP AUTH.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L247","def":{"name":"auth_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@auth.try(&.[](:id))"}},{"id":"auth_password-instance-method","html_id":"auth_password-instance-method","name":"auth_password","doc":"Returns authentication password when using SMTP AUTH.","summary":"<p>Returns authentication password when using SMTP AUTH.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L252","def":{"name":"auth_password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@auth.try(&.[](:password))"}},{"id":"client_name:String-instance-method","html_id":"client_name:String-instance-method","name":"client_name","doc":"Client name used in **Message-Id** header.","summary":"<p>Client name used in <strong>Message-Id</strong> header.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L99","def":{"name":"client_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@client_name"}},{"id":"client_name=(new_name:String)-instance-method","html_id":"client_name=(new_name:String)-instance-method","name":"client_name=","doc":"Client name used in **Message-ID** header and log entry.\n\nOnly alphabets(`a`-`z`, `A`-`Z`), numbers(`0`-`9`), and underscore(`_`) are acceptable.","summary":"<p>Client name used in <strong>Message-ID</strong> header and log entry.</p>","abstract":false,"args":[{"name":"new_name","doc":null,"default_value":"","external_name":"new_name","restriction":"String"}],"args_string":"(new_name : String)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L232","def":{"name":"client_name=","args":[{"name":"new_name","doc":null,"default_value":"","external_name":"new_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if new_name.empty? || (new_name =~ (/\\W/))\n  raise(EMail::Error::ClientConfigError.new(\"Invalid client name \\\"#{new_name}\\\"\"))\nend\n@client_name = new_name\n"}},{"id":"connect_timeout:Int32?-instance-method","html_id":"connect_timeout:Int32?-instance-method","name":"connect_timeout","doc":"CONNECT timeout for the socket.","summary":"<p>CONNECT timeout for the socket.</p>","abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L130","def":{"name":"connect_timeout","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@connect_timeout"}},{"id":"connect_timeout=(sec:Int32)-instance-method","html_id":"connect_timeout=(sec:Int32)-instance-method","name":"connect_timeout=","doc":"CONNECT timeout for the socket.","summary":"<p>CONNECT timeout for the socket.</p>","abstract":false,"args":[{"name":"sec","doc":null,"default_value":"","external_name":"sec","restriction":"Int32"}],"args_string":"(sec : Int32)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L261","def":{"name":"connect_timeout=","args":[{"name":"sec","doc":null,"default_value":"","external_name":"sec","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if sec > 0\nelse\n  raise(EMail::Error::ClientConfigError.new(\"connect_timeout must be greater than 0.\"))\nend\n@connect_timeout = sec\n"}},{"id":"dns_timeout:Int32?-instance-method","html_id":"dns_timeout:Int32?-instance-method","name":"dns_timeout","doc":"DNS timeout for the socket.","summary":"<p>DNS timeout for the socket.</p>","abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L127","def":{"name":"dns_timeout","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@dns_timeout"}},{"id":"dns_timeout=(sec:Int32)-instance-method","html_id":"dns_timeout=(sec:Int32)-instance-method","name":"dns_timeout=","doc":"DNS timeout for the socket.","summary":"<p>DNS timeout for the socket.</p>","abstract":false,"args":[{"name":"sec","doc":null,"default_value":"","external_name":"sec","restriction":"Int32"}],"args_string":"(sec : Int32)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L261","def":{"name":"dns_timeout=","args":[{"name":"sec","doc":null,"default_value":"","external_name":"sec","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if sec > 0\nelse\n  raise(EMail::Error::ClientConfigError.new(\"dns_timeout must be greater than 0.\"))\nend\n@dns_timeout = sec\n"}},{"id":"helo_domain:String?-instance-method","html_id":"helo_domain:String?-instance-method","name":"helo_domain","doc":"Domain name for SMTP **HELO** / **EHLO** command.","summary":"<p>Domain name for SMTP <strong>HELO</strong> / <strong>EHLO</strong> command.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L102","def":{"name":"helo_domain","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@helo_domain"}},{"id":"helo_domain=(new_domain:String)-instance-method","html_id":"helo_domain=(new_domain:String)-instance-method","name":"helo_domain=","doc":"Domain name for SMTP **HELO** or **EHLO** command.\n\nOnly FQDN format is acceptable.","summary":"<p>Domain name for SMTP <strong>HELO</strong> or <strong>EHLO</strong> command.</p>","abstract":false,"args":[{"name":"new_domain","doc":null,"default_value":"","external_name":"new_domain","restriction":"String"}],"args_string":"(new_domain : String)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L206","def":{"name":"helo_domain=","args":[{"name":"new_domain","doc":null,"default_value":"","external_name":"new_domain","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if new_domain =~ DOMAIN_FORMAT\nelse\n  raise(EMail::Error::ClientConfigError.new(\"Invalid HELO domain \\\"#{helo_domain}\\\"\"))\nend\n@helo_domain = new_domain\n"}},{"id":"host:String-instance-method","html_id":"host:String-instance-method","name":"host","doc":"SMTP server hostname or IP address.","summary":"<p>SMTP server hostname or IP address.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L93","def":{"name":"host","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@host"}},{"id":"host=(host:String)-instance-method","html_id":"host=(host:String)-instance-method","name":"host=","doc":"SMTP server hostname or IP address.","summary":"<p>SMTP server hostname or IP address.</p>","abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"}],"args_string":"(host : String)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L93","def":{"name":"host=","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@host = host"}},{"id":"log:Log?-instance-method","html_id":"log:Log?-instance-method","name":"log","doc":"Client specific(non-default) logger.\n\nEven without this, email clients can use the default logger of the EMail::Client type to output log entries.\n\nSee [Log](https://crystal-lang.org/api/OpenSSL/Log.html).","summary":"<p>Client specific(non-default) logger.</p>","abstract":false,"args":[],"args_string":" : Log?","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L124","def":{"name":"log","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Log | ::Nil","visibility":"Public","body":"@log"}},{"id":"log=(log:Log?)-instance-method","html_id":"log=(log:Log?)-instance-method","name":"log=","doc":"Client specific(non-default) logger.\n\nEven without this, email clients can use the default logger of the EMail::Client type to output log entries.\n\nSee [Log](https://crystal-lang.org/api/OpenSSL/Log.html).","summary":"<p>Client specific(non-default) logger.</p>","abstract":false,"args":[{"name":"log","doc":null,"default_value":"","external_name":"log","restriction":"Log | ::Nil"}],"args_string":"(log : Log?)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L124","def":{"name":"log=","args":[{"name":"log","doc":null,"default_value":"","external_name":"log","restriction":"Log | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@log = log"}},{"id":"on_failed:EMail::Client::OnFailedProc?-instance-method","html_id":"on_failed:EMail::Client::OnFailedProc?-instance-method","name":"on_failed","doc":"Callback function to be called when the SMTP server returns **4XX** or **5XX** response.\n\nThis will be called with email message object that tried to send, and SMTP commands and responses history. In this function, you can do something to handle errors: e.g. \"investigating the causes of the fail\", \"notifying you of the fail\", and so on.Fatal error handler.","summary":"<p>Callback function to be called when the SMTP server returns <strong>4XX</strong> or <strong>5XX</strong> response.</p>","abstract":false,"args":[],"args_string":" : EMail::Client::OnFailedProc?","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L107","def":{"name":"on_failed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"EMail::Client::OnFailedProc | ::Nil","visibility":"Public","body":"@on_failed"}},{"id":"on_failed=(on_failed:EMail::Client::OnFailedProc?)-instance-method","html_id":"on_failed=(on_failed:EMail::Client::OnFailedProc?)-instance-method","name":"on_failed=","doc":"Callback function to be called when the SMTP server returns **4XX** or **5XX** response.\n\nThis will be called with email message object that tried to send, and SMTP commands and responses history. In this function, you can do something to handle errors: e.g. \"investigating the causes of the fail\", \"notifying you of the fail\", and so on.Fatal error handler.","summary":"<p>Callback function to be called when the SMTP server returns <strong>4XX</strong> or <strong>5XX</strong> response.</p>","abstract":false,"args":[{"name":"on_failed","doc":null,"default_value":"","external_name":"on_failed","restriction":"EMail::Client::OnFailedProc | ::Nil"}],"args_string":"(on_failed : EMail::Client::OnFailedProc?)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L107","def":{"name":"on_failed=","args":[{"name":"on_failed","doc":null,"default_value":"","external_name":"on_failed","restriction":"EMail::Client::OnFailedProc | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@on_failed = on_failed"}},{"id":"on_fatal_error:EMail::Client::OnFatalErrorProc-instance-method","html_id":"on_fatal_error:EMail::Client::OnFatalErrorProc-instance-method","name":"on_fatal_error","doc":"Callback function to be calld when an exception is raised during SMTP session.\n\nIt will be called with the raised Exception instance.","summary":"<p>Callback function to be calld when an exception is raised during SMTP session.</p>","abstract":false,"args":[],"args_string":" : EMail::Client::OnFatalErrorProc","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L112","def":{"name":"on_fatal_error","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"EMail::Client::OnFatalErrorProc","visibility":"Public","body":"@on_fatal_error"}},{"id":"on_fatal_error=(on_fatal_error:EMail::Client::OnFatalErrorProc)-instance-method","html_id":"on_fatal_error=(on_fatal_error:EMail::Client::OnFatalErrorProc)-instance-method","name":"on_fatal_error=","doc":"Callback function to be calld when an exception is raised during SMTP session.\n\nIt will be called with the raised Exception instance.","summary":"<p>Callback function to be calld when an exception is raised during SMTP session.</p>","abstract":false,"args":[{"name":"on_fatal_error","doc":null,"default_value":"","external_name":"on_fatal_error","restriction":"EMail::Client::OnFatalErrorProc"}],"args_string":"(on_fatal_error : EMail::Client::OnFatalErrorProc)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L112","def":{"name":"on_fatal_error=","args":[{"name":"on_fatal_error","doc":null,"default_value":"","external_name":"on_fatal_error","restriction":"EMail::Client::OnFatalErrorProc"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@on_fatal_error = on_fatal_error"}},{"id":"port:Int32-instance-method","html_id":"port:Int32-instance-method","name":"port","doc":"Port number of SMTP server.","summary":"<p>Port number of SMTP server.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L96","def":{"name":"port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@port"}},{"id":"port=(port:Int32)-instance-method","html_id":"port=(port:Int32)-instance-method","name":"port=","doc":"Port number of SMTP server.","summary":"<p>Port number of SMTP server.</p>","abstract":false,"args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"}],"args_string":"(port : Int32)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L96","def":{"name":"port=","args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@port = port"}},{"id":"read_timeout:Int32?-instance-method","html_id":"read_timeout:Int32?-instance-method","name":"read_timeout","doc":"READ timeout for the socket.","summary":"<p>READ timeout for the socket.</p>","abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L133","def":{"name":"read_timeout","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@read_timeout"}},{"id":"read_timeout=(sec:Int32)-instance-method","html_id":"read_timeout=(sec:Int32)-instance-method","name":"read_timeout=","doc":"READ timeout for the socket.","summary":"<p>READ timeout for the socket.</p>","abstract":false,"args":[{"name":"sec","doc":null,"default_value":"","external_name":"sec","restriction":"Int32"}],"args_string":"(sec : Int32)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L261","def":{"name":"read_timeout=","args":[{"name":"sec","doc":null,"default_value":"","external_name":"sec","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if sec > 0\nelse\n  raise(EMail::Error::ClientConfigError.new(\"read_timeout must be greater than 0.\"))\nend\n@read_timeout = sec\n"}},{"id":"tls_context:OpenSSL::SSL::Context::Client-instance-method","html_id":"tls_context:OpenSSL::SSL::Context::Client-instance-method","name":"tls_context","doc":"OpenSSL context for the TLS connection\n\nSee [OpenSSL::SSL::Context::Client](https://crystal-lang.org/api/OpenSSL/SSL/Context/Client.html).","summary":"<p>OpenSSL context for the TLS connection</p>","abstract":false,"args":[],"args_string":" : OpenSSL::SSL::Context::Client","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L117","def":{"name":"tls_context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tls_context"}},{"id":"use_auth(id,password)-instance-method","html_id":"use_auth(id,password)-instance-method","name":"use_auth","doc":"Set the client to authenticate with SMTP **AUTH** command by using given id and password.\n\nOnly **AUTH PLAIN** and **AUTH LOGIN** commands are supported.\n\n**NOTE: SMTP authentication can be used only under TLS encryption.**","summary":"<p>Set the client to authenticate with SMTP <strong>AUTH</strong> command by using given id and password.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":""}],"args_string":"(id, password)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L242","def":{"name":"use_auth","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@auth = {id: id, password: password}"}},{"id":"use_auth?-instance-method","html_id":"use_auth?-instance-method","name":"use_auth?","doc":"Returns `true` when using SMTP AUTH.","summary":"<p>Returns <code>true</code> when using SMTP AUTH.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L257","def":{"name":"use_auth?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!@auth.nil?"}},{"id":"use_smtps?-instance-method","html_id":"use_smtps?-instance-method","name":"use_smtps?","doc":"Returns `true` when using SMTPS.","summary":"<p>Returns <code>true</code> when using SMTPS.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L220","def":{"name":"use_smtps?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tls.smtps?"}},{"id":"use_starttls?-instance-method","html_id":"use_starttls?-instance-method","name":"use_starttls?","doc":"Returns `true` when using STARTTLS.","summary":"<p>Returns <code>true</code> when using STARTTLS.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L225","def":{"name":"use_starttls?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tls.starttls?"}},{"id":"use_tls(tls_mode:TLSMode)-instance-method","html_id":"use_tls(tls_mode:TLSMode)-instance-method","name":"use_tls","doc":"Use STARTTLS command to encrypt the SMTP session.","summary":"<p>Use STARTTLS command to encrypt the SMTP session.</p>","abstract":false,"args":[{"name":"tls_mode","doc":null,"default_value":"","external_name":"tls_mode","restriction":"TLSMode"}],"args_string":"(tls_mode : TLSMode)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L212","def":{"name":"use_tls","args":[{"name":"tls_mode","doc":null,"default_value":"","external_name":"tls_mode","restriction":"TLSMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if flag?(:without_openssl) %}\n        raise EMail::Error::ClientConfigError.new(\"TLS is disabled because `-D without_openssl` was passed at compile time\")\n      {% end %}\n@tls = tls_mode\n"}},{"id":"write_timeout:Int32?-instance-method","html_id":"write_timeout:Int32?-instance-method","name":"write_timeout","doc":"WRITE timeout for the socket.","summary":"<p>WRITE timeout for the socket.</p>","abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L136","def":{"name":"write_timeout","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@write_timeout"}},{"id":"write_timeout=(sec:Int32)-instance-method","html_id":"write_timeout=(sec:Int32)-instance-method","name":"write_timeout=","doc":"WRITE timeout for the socket.","summary":"<p>WRITE timeout for the socket.</p>","abstract":false,"args":[{"name":"sec","doc":null,"default_value":"","external_name":"sec","restriction":"Int32"}],"args_string":"(sec : Int32)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L261","def":{"name":"write_timeout=","args":[{"name":"sec","doc":null,"default_value":"","external_name":"sec","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if sec > 0\nelse\n  raise(EMail::Error::ClientConfigError.new(\"write_timeout must be greater than 0.\"))\nend\n@write_timeout = sec\n"}}],"macros":[],"types":[]},{"html_id":"github.com/arcage/crystal-email/EMail/Client/OnFailedProc","path":"EMail/Client/OnFailedProc.html","kind":"alias","full_name":"EMail::Client::OnFailedProc","name":"OnFailedProc","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"email/client/config.cr","line_number":10,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":true,"aliased":"Proc(EMail::Message, Array(String), Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail/Client","kind":"class","full_name":"EMail::Client","name":"Client"},"doc":"SMTP error handler.\n\nCalled when the SMTP server returns **4XX** or **5XX** responce during sending email.","summary":"<p>SMTP error handler.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/arcage/crystal-email/EMail/Client/OnFatalErrorProc","path":"EMail/Client/OnFatalErrorProc.html","kind":"alias","full_name":"EMail::Client::OnFatalErrorProc","name":"OnFatalErrorProc","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"email/client/config.cr","line_number":15,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":true,"aliased":"Proc(Exception, Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail/Client","kind":"class","full_name":"EMail::Client","name":"Client"},"doc":"Fatal error handler.\n\nCalled when the exception is raised during sending email.","summary":"<p>Fatal error handler.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/arcage/crystal-email/EMail/Client/TLSMode","path":"EMail/Client/TLSMode.html","kind":"enum","full_name":"EMail::Client::TLSMode","name":"TLSMode","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/arcage/crystal-email/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/arcage/crystal-email/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/arcage/crystal-email/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/arcage/crystal-email/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"email/client/config.cr","line_number":2,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"NONE","name":"NONE","value":"0","doc":null,"summary":null},{"id":"STARTTLS","name":"STARTTLS","value":"1","doc":null,"summary":null},{"id":"SMTPS","name":"SMTPS","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail/Client","kind":"class","full_name":"EMail::Client","name":"Client"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"none?-instance-method","html_id":"none?-instance-method","name":"none?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L3","def":{"name":"none?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NONE"}},{"id":"smtps?-instance-method","html_id":"smtps?-instance-method","name":"smtps?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L5","def":{"name":"smtps?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SMTPS"}},{"id":"starttls?-instance-method","html_id":"starttls?-instance-method","name":"starttls?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/client/config.cr#L4","def":{"name":"starttls?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == STARTTLS"}}],"macros":[],"types":[]}]},{"html_id":"github.com/arcage/crystal-email/EMail/ConcurrentSender","path":"EMail/ConcurrentSender.html","kind":"class","full_name":"EMail::ConcurrentSender","name":"ConcurrentSender","abstract":false,"superclass":{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/arcage/crystal-email/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"email/concurrent_sender.cr","line_number":33,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/concurrent_sender.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail","kind":"module","full_name":"EMail","name":"EMail"},"doc":"Utility object for concurrent email sending.\n\n```crystal\nrcpt_list = [\"a@example.com\", \"b@example.com\", \"c@example.com\", \"d@example.com\"]\n\n# Set SMTP client configuration\nconfig = EMail::Client::Config.new(\"your.mx.example.com\", 25)\n\n# Create concurrent sender object\nsender = EMail::ConcurrentSender.new(config)\n\n# Sending emails with concurrently 3 connections.\nsender.number_of_connections = 3\n\n# Sending max 10 emails by 1 connection.\nsender.messages_per_connection = 10\n\n# Start email sending.\nsender.start do\n  # In this block, default receiver is sender\n  rcpt_list.each do |rcpt_to|\n    # Create email message\n    mail = EMail::Message.new\n    mail.from \"your_addr@example.com\"\n    mail.to rcpt_to\n    mail.subject \"Concurrent email sending\"\n    mail.message \"message to #{rcpt_to}\"\n    # Enqueue the email to sender\n    enqueue mail\n  end\nend\n```","summary":"<p>Utility object for concurrent email sending.</p>","class_methods":[],"constructors":[{"id":"new(config)-class-method","html_id":"new(config)-class-method","name":"new","doc":"Create sender object with given client settings as EMail::Client::Config object.","summary":"<p>Create sender object with given client settings as EMail::Client::Config object.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""}],"args_string":"(config)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/concurrent_sender.cr#L45","def":{"name":"new","args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(config)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*args,**named_args)-class-method","html_id":"new(*args,**named_args)-class-method","name":"new","doc":"Send one email with given client settings as several arguments.\n\nAvairable arguments are same as `EMail::Client::Conifg.create` method.","summary":"<p>Send one email with given client settings as several arguments.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/concurrent_sender.cr#L51","def":{"name":"new","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(*args, **named_args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"connection_interval=(new_interval:Int32)-instance-method","html_id":"connection_interval=(new_interval:Int32)-instance-method","name":"connection_interval=","doc":"Set the interval milliseconds between some connection is closed and new one is opened.","summary":"<p>Set the interval milliseconds between some connection is closed and new one is opened.</p>","abstract":false,"args":[{"name":"new_interval","doc":null,"default_value":"","external_name":"new_interval","restriction":"Int32"}],"args_string":"(new_interval : Int32)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/concurrent_sender.cr#L72","def":{"name":"connection_interval=","args":[{"name":"new_interval","doc":null,"default_value":"","external_name":"new_interval","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @started\n  raise(EMail::Error::SenderError.new(\"Parameters cannot be set after start sending\"))\nend\nif new_interval < 0\n  raise(EMail::Error::SenderError.new(\"Connection interval must be 0 or greater(given: #{new_interval})\"))\nend\n@connection_interval = new_interval\n"}},{"id":"enqueue(messages:Array(Message))-instance-method","html_id":"enqueue(messages:Array(Message))-instance-method","name":"enqueue","doc":"Encueue email messages at the same time.","summary":"<p>Encueue email messages at the same time.</p>","abstract":false,"args":[{"name":"messages","doc":null,"default_value":"","external_name":"messages","restriction":"Array(Message)"}],"args_string":"(messages : Array(Message))","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/concurrent_sender.cr#L85","def":{"name":"enqueue","args":[{"name":"messages","doc":null,"default_value":"","external_name":"messages","restriction":"Array(Message)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"messages.each do |message|\n  enqueue(message)\nend"}},{"id":"enqueue(message:Message)-instance-method","html_id":"enqueue(message:Message)-instance-method","name":"enqueue","doc":"Enqueue a email message.","summary":"<p>Enqueue a email message.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Message"}],"args_string":"(message : Message)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/concurrent_sender.cr#L79","def":{"name":"enqueue","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"Message"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@queue << message.validate!\nFiber.yield\n"}},{"id":"messages_per_connection=(new_value:Int32)-instance-method","html_id":"messages_per_connection=(new_value:Int32)-instance-method","name":"messages_per_connection=","doc":"Set the maximum number of email messages sent by one SMTP connection.\n\nWhen the number of sent emails by some SMTP connection reaches this parameter, the current connection will be closed and new one will be opened.","summary":"<p>Set the maximum number of email messages sent by one SMTP connection.</p>","abstract":false,"args":[{"name":"new_value","doc":null,"default_value":"","external_name":"new_value","restriction":"Int32"}],"args_string":"(new_value : Int32)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/concurrent_sender.cr#L65","def":{"name":"messages_per_connection=","args":[{"name":"new_value","doc":null,"default_value":"","external_name":"new_value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @started\n  raise(EMail::Error::SenderError.new(\"Parameters cannot be set after start sending\"))\nend\nif new_value < 1\n  raise(EMail::Error::SenderError.new(\"Messages per connection must be 1 or greater(given: #{new_value})\"))\nend\n@messages_per_connection = new_value\n"}},{"id":"number_of_connections=(new_value:Int32)-instance-method","html_id":"number_of_connections=(new_value:Int32)-instance-method","name":"number_of_connections=","doc":"Set the maximum number of SMTP connections established at the same time.","summary":"<p>Set the maximum number of SMTP connections established at the same time.</p>","abstract":false,"args":[{"name":"new_value","doc":null,"default_value":"","external_name":"new_value","restriction":"Int32"}],"args_string":"(new_value : Int32)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/concurrent_sender.cr#L56","def":{"name":"number_of_connections=","args":[{"name":"new_value","doc":null,"default_value":"","external_name":"new_value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @started\n  raise(EMail::Error::SenderError.new(\"Parameters cannot be set after start sending\"))\nend\nif new_value < 1\n  raise(EMail::Error::SenderError.new(\"Number of connections must be 1 or greater(given: #{new_value})\"))\nend\n@number_of_connections = new_value\n"}},{"id":"start(number_of_connections:Int32?=nil,messages_per_connection:Int32?=nil,connection_interval:Int32?=nil,&)-instance-method","html_id":"start(number_of_connections:Int32?=nil,messages_per_connection:Int32?=nil,connection_interval:Int32?=nil,&amp;)-instance-method","name":"start","doc":"Starts sending emails with given parameters.","summary":"<p>Starts sending emails with given parameters.</p>","abstract":false,"args":[{"name":"number_of_connections","doc":null,"default_value":"nil","external_name":"number_of_connections","restriction":"Int32 | ::Nil"},{"name":"messages_per_connection","doc":null,"default_value":"nil","external_name":"messages_per_connection","restriction":"Int32 | ::Nil"},{"name":"connection_interval","doc":null,"default_value":"nil","external_name":"connection_interval","restriction":"Int32 | ::Nil"}],"args_string":"(number_of_connections : Int32? = <span class=\"n\">nil</span>, messages_per_connection : Int32? = <span class=\"n\">nil</span>, connection_interval : Int32? = <span class=\"n\">nil</span>, &)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/concurrent_sender.cr#L108","def":{"name":"start","args":[{"name":"number_of_connections","doc":null,"default_value":"nil","external_name":"number_of_connections","restriction":"Int32 | ::Nil"},{"name":"messages_per_connection","doc":null,"default_value":"nil","external_name":"messages_per_connection","restriction":"Int32 | ::Nil"},{"name":"connection_interval","doc":null,"default_value":"nil","external_name":"connection_interval","restriction":"Int32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"if @started\n  raise(EMail::Error::SenderError.new(\"Email sending is already started\"))\nend\nif number_of_connections\n  self.number_of_connections = number_of_connections\nend\nif messages_per_connection\n  self.messages_per_connection = messages_per_connection\nend\nif connection_interval\n  self.connection_interval = connection_interval\nend\n@started = true\nspawn_sender\nwith self yield\n@finished = true\nwhile !(@queue.empty? && @connections.empty?)\n  Fiber.yield\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/arcage/crystal-email/EMail/Error","path":"EMail/Error.html","kind":"class","full_name":"EMail::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/arcage/crystal-email/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/arcage/crystal-email/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/arcage/crystal-email/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"email/error.cr","line_number":1,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/error.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/arcage/crystal-email/EMail/Error/AddressError","kind":"class","full_name":"EMail::Error::AddressError","name":"AddressError"},{"html_id":"github.com/arcage/crystal-email/EMail/Error/ClientConfigError","kind":"class","full_name":"EMail::Error::ClientConfigError","name":"ClientConfigError"},{"html_id":"github.com/arcage/crystal-email/EMail/Error/ClientError","kind":"class","full_name":"EMail::Error::ClientError","name":"ClientError"},{"html_id":"github.com/arcage/crystal-email/EMail/Error/ContentError","kind":"class","full_name":"EMail::Error::ContentError","name":"ContentError"},{"html_id":"github.com/arcage/crystal-email/EMail/Error/HeaderError","kind":"class","full_name":"EMail::Error::HeaderError","name":"HeaderError"},{"html_id":"github.com/arcage/crystal-email/EMail/Error/MessageError","kind":"class","full_name":"EMail::Error::MessageError","name":"MessageError"},{"html_id":"github.com/arcage/crystal-email/EMail/Error/SenderError","kind":"class","full_name":"EMail::Error::SenderError","name":"SenderError"}],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail","kind":"module","full_name":"EMail","name":"EMail"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/arcage/crystal-email/EMail/Error/AddressError","path":"EMail/Error/AddressError.html","kind":"class","full_name":"EMail::Error::AddressError","name":"AddressError","abstract":false,"superclass":{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},"ancestors":[{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},{"html_id":"github.com/arcage/crystal-email/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/arcage/crystal-email/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"email/error.cr","line_number":2,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/error.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/arcage/crystal-email/EMail/Error/ClientConfigError","path":"EMail/Error/ClientConfigError.html","kind":"class","full_name":"EMail::Error::ClientConfigError","name":"ClientConfigError","abstract":false,"superclass":{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},"ancestors":[{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},{"html_id":"github.com/arcage/crystal-email/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/arcage/crystal-email/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"email/error.cr","line_number":10,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/error.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/arcage/crystal-email/EMail/Error/ClientError","path":"EMail/Error/ClientError.html","kind":"class","full_name":"EMail::Error::ClientError","name":"ClientError","abstract":false,"superclass":{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},"ancestors":[{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},{"html_id":"github.com/arcage/crystal-email/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/arcage/crystal-email/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"email/error.cr","line_number":8,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/error.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/arcage/crystal-email/EMail/Error/ContentError","path":"EMail/Error/ContentError.html","kind":"class","full_name":"EMail::Error::ContentError","name":"ContentError","abstract":false,"superclass":{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},"ancestors":[{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},{"html_id":"github.com/arcage/crystal-email/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/arcage/crystal-email/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"email/error.cr","line_number":4,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/error.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/arcage/crystal-email/EMail/Error/HeaderError","path":"EMail/Error/HeaderError.html","kind":"class","full_name":"EMail::Error::HeaderError","name":"HeaderError","abstract":false,"superclass":{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},"ancestors":[{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},{"html_id":"github.com/arcage/crystal-email/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/arcage/crystal-email/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"email/error.cr","line_number":6,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/error.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/arcage/crystal-email/EMail/Error/MessageError","path":"EMail/Error/MessageError.html","kind":"class","full_name":"EMail::Error::MessageError","name":"MessageError","abstract":false,"superclass":{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},"ancestors":[{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},{"html_id":"github.com/arcage/crystal-email/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/arcage/crystal-email/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"email/error.cr","line_number":12,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/error.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/arcage/crystal-email/EMail/Error/SenderError","path":"EMail/Error/SenderError.html","kind":"class","full_name":"EMail::Error::SenderError","name":"SenderError","abstract":false,"superclass":{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},"ancestors":[{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},{"html_id":"github.com/arcage/crystal-email/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/arcage/crystal-email/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"email/error.cr","line_number":14,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/error.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail/Error","kind":"class","full_name":"EMail::Error","name":"Error"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/arcage/crystal-email/EMail/Message","path":"EMail/Message.html","kind":"class","full_name":"EMail::Message","name":"Message","abstract":false,"superclass":{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/arcage/crystal-email/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/arcage/crystal-email/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"email/message.cr","line_number":163,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail","kind":"module","full_name":"EMail","name":"EMail"},"doc":"Email message object.\n\n### Minimal email with plain text message.\n\n```crystal\nemail = EMail::Message.new\n\n# Email headers\nemail.from \"your_addr@example.com\"\nemail.to \"to@example.com\"\nemail.subject \"Subject of the mail\"\n\n# Email plain text email body\nemail.message <<-EOM\n  Message body of the mail.\n\n  --\n  Your Signature\n  EOM\n```\n\nYou can set following preset headers and your own `#custom_header`s:\n\n- [*][!] `#from`\n- [*][?] `#to`\n- [*][?] `#cc`\n- [*][?] `#bcc`\n- [*] `#reply_to`\n- `#return_path`\n- `#sender`\n- `#envelope_from`\n- [!] `#subject`\n\n_[!] required._\n\n_[*] usable multiple times._\n\n_[?] required at least one recipient._\n\n### Set custom header\n\n```crystal\nemail.custom_header \"X-Mailer\", \"Your APP Name\"\n```\n### Set mailbox name with email address\n\n```crystal\nemail.from \"your_addr@example.com\", \"your name\"\n```\n\nAlso, `#to`, `#cc`, `#bcc`, etc...\n\n### HTML email with altanative plain text message.\n\n```crystal\nemail = EMail::Message.new\n\n# Email headers\nemail.from \"your_addr@example.com\"\nemail.to \"to@example.com\"\nemail.subject \"Subject of the mail\"\n\n# Email plain text email body\nemail.message <<-EOM\n  Message body of the mail.\n\n  --\n  Your Signature\n  EOM\n\n# Email HTML email body\nemail.message_html <<-EOM\n  <html>\n  <body>\n  <h1>Subject of the mail<h1>\n  <p>Message body of the mail.</p>\n  <footer>\n  Your Signature\n  </footer>\n  </body>\n  </html>\n  EOM\n```\n\n### Attache files\n\n```crystal\nemail = EMail::Message.new\n\n# Email headers\nemail.from \"your_addr@example.com\"\nemail.to \"to@example.com\"\nemail.subject \"Subject of the mail\"\n\n# Email plain text email body\nemail.message <<-EOM\n  Message body of the mail.\n\n  --\n  Your Signature\n  EOM\n\n# Attach file to email\nemail.attach \"./photo.jpeg\"\n```\n\n#### Set alternative file name for recipient\n\n```crystal\nemail.attach \"./photo.jpeg\", file_name: \"last_year.jpeg\"\n```\n\n#### Set specific MIME type\n\n```crystal\nemail.attach \"./data\", mime_type: \"text/csv\"\n```\n\n#### Read attachment file data from IO\n\n```crystal\nemail.attach io, file_name: \"photo.jpeg\"\n```\nIn this case, `file_name` argument is required.\n\n### Add message resouces\n\n```crystal\nemail = EMail::Message.new\n\n# Email headers\nemail.from \"your_addr@example.com\"\nemail.to \"to@example.com\"\nemail.subject \"Subject of the mail\"\n\n# Email plain text email body\nemail.message <<-EOM\n  Message body of the mail.\n\n  --\n  Your Signature\n  EOM\n\n# Email HTML email body\nemail.message_html <<-EOM\n  <html>\n  <body>\n  <img src=\"cid:logo@some.domain\">\n  <h1>Subject of the mail<h1>\n  <p>Message body of the mail.</p>\n  <footer>\n  Your Signature\n  </footer>\n  </body>\n  </html>\n  EOM\n\n# Add message resource\nemail.message_resource \"./logo.png\", cid: \"logo@some.domain\"\n```\n\n`#message_resource` is lmost same as `#attach` expect it requires `cid` argument.","summary":"<p>Email message object.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"attach(file_path:String,file_name:String?=nil,mime_type:String?=nil)-instance-method","html_id":"attach(file_path:String,file_name:String?=nil,mime_type:String?=nil)-instance-method","name":"attach","doc":"Attache the file from given file path.\n\nYou can set another `file_name` for recipients and sprcific `mime_type`.\nBy default, MIME type will be inferred from extname of the file name.","summary":"<p>Attache the file from given file path.</p>","abstract":false,"args":[{"name":"file_path","doc":null,"default_value":"","external_name":"file_path","restriction":"String"},{"name":"file_name","doc":null,"default_value":"nil","external_name":"file_name","restriction":"String | ::Nil"},{"name":"mime_type","doc":null,"default_value":"nil","external_name":"mime_type","restriction":"String | ::Nil"}],"args_string":"(file_path : String, file_name : String? = <span class=\"n\">nil</span>, mime_type : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L333","def":{"name":"attach","args":[{"name":"file_path","doc":null,"default_value":"","external_name":"file_path","restriction":"String"},{"name":"file_name","doc":null,"default_value":"nil","external_name":"file_name","restriction":"String | ::Nil"},{"name":"mime_type","doc":null,"default_value":"nil","external_name":"mime_type","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attachments << (Content::AttachmentFile.new(file_path, file_id: nil, file_name: file_name, mime_type: mime_type))"}},{"id":"attach(io:IO,file_name:String,mime_type:String?=nil)-instance-method","html_id":"attach(io:IO,file_name:String,mime_type:String?=nil)-instance-method","name":"attach","doc":"Attache the file read from given IO.\n\nIn this case, `file_name` argument is required.","summary":"<p>Attache the file read from given IO.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"file_name","doc":null,"default_value":"","external_name":"file_name","restriction":"String"},{"name":"mime_type","doc":null,"default_value":"nil","external_name":"mime_type","restriction":"String | ::Nil"}],"args_string":"(io : IO, file_name : String, mime_type : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L340","def":{"name":"attach","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"file_name","doc":null,"default_value":"","external_name":"file_name","restriction":"String"},{"name":"mime_type","doc":null,"default_value":"nil","external_name":"mime_type","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attachments << (Content::AttachmentFile.new(io, file_id: nil, file_name: file_name, mime_type: mime_type))"}},{"id":"bcc(mail_address:EMail::Address)-instance-method","html_id":"bcc(mail_address:EMail::Address)-instance-method","name":"bcc","doc":"Add email address to **Bcc** header.","summary":"<p>Add email address to <strong>Bcc</strong> header.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"EMail::Address"}],"args_string":"(mail_address : EMail::Address)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L418","def":{"name":"bcc","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"EMail::Address"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:bcc].add(mail_address)"}},{"id":"bcc(mail_address:String,sender_name:String?=nil)-instance-method","html_id":"bcc(mail_address:String,sender_name:String?=nil)-instance-method","name":"bcc","doc":"Add email address to **Bcc** header.","summary":"<p>Add email address to <strong>Bcc</strong> header.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"},{"name":"sender_name","doc":null,"default_value":"nil","external_name":"sender_name","restriction":"String | ::Nil"}],"args_string":"(mail_address : String, sender_name : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L418","def":{"name":"bcc","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"},{"name":"sender_name","doc":null,"default_value":"nil","external_name":"sender_name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:bcc].add(mail_address, sender_name)"}},{"id":"cc(mail_address:EMail::Address)-instance-method","html_id":"cc(mail_address:EMail::Address)-instance-method","name":"cc","doc":"Add email address to **Cc** header.","summary":"<p>Add email address to <strong>Cc</strong> header.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"EMail::Address"}],"args_string":"(mail_address : EMail::Address)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L417","def":{"name":"cc","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"EMail::Address"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:cc].add(mail_address)"}},{"id":"cc(mail_address:String,sender_name:String?=nil)-instance-method","html_id":"cc(mail_address:String,sender_name:String?=nil)-instance-method","name":"cc","doc":"Add email address to **Cc** header.","summary":"<p>Add email address to <strong>Cc</strong> header.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"},{"name":"sender_name","doc":null,"default_value":"nil","external_name":"sender_name","restriction":"String | ::Nil"}],"args_string":"(mail_address : String, sender_name : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L417","def":{"name":"cc","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"},{"name":"sender_name","doc":null,"default_value":"nil","external_name":"sender_name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:cc].add(mail_address, sender_name)"}},{"id":"custom_header(name:String,value:String)-instance-method","html_id":"custom_header(name:String,value:String)-instance-method","name":"custom_header","doc":"Set cuntome header you want to set to the message.","summary":"<p>Set cuntome header you want to set to the message.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(name : String, value : String)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L361","def":{"name":"custom_header","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"normalized_name = name.downcase.gsub('-', '_')\nif normalized_name == \"mime_version\"\n  raise(EMail::Error::MessageError.new(\"Mime-Version header is automatically set to 1.0, and cannot be overwritten.\"))\nend\nif @preset_headers.keys.map(&.to_s).includes?(normalized_name)\n  raise(EMail::Error::MessageError.new(\"#{name} header must be set by using ##{normalized_name} method\"))\nend\nopt_hdr = EMail::Header::Unstructured.new(name.to_s)\nopt_hdr.set(value)\n@custom_headers << opt_hdr\n"}},{"id":"envelope_from(mail_address:String)-instance-method","html_id":"envelope_from(mail_address:String)-instance-method","name":"envelope_from","doc":"Set envelope from address.","summary":"<p>Set envelope from address.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"}],"args_string":"(mail_address : String)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L212","def":{"name":"envelope_from","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@envelope_from = Address.new(mail_address)"}},{"id":"from(mail_address:EMail::Address)-instance-method","html_id":"from(mail_address:EMail::Address)-instance-method","name":"from","doc":"Add email address to **From** header.","summary":"<p>Add email address to <strong>From</strong> header.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"EMail::Address"}],"args_string":"(mail_address : EMail::Address)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L415","def":{"name":"from","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"EMail::Address"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:from].add(mail_address)"}},{"id":"from(mail_address:String,sender_name:String?=nil)-instance-method","html_id":"from(mail_address:String,sender_name:String?=nil)-instance-method","name":"from","doc":"Add email address to **From** header.","summary":"<p>Add email address to <strong>From</strong> header.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"},{"name":"sender_name","doc":null,"default_value":"nil","external_name":"sender_name","restriction":"String | ::Nil"}],"args_string":"(mail_address : String, sender_name : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L415","def":{"name":"from","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"},{"name":"sender_name","doc":null,"default_value":"nil","external_name":"sender_name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:from].add(mail_address, sender_name)"}},{"id":"message(message_body:String)-instance-method","html_id":"message(message_body:String)-instance-method","name":"message","doc":"Set plain text message body.","summary":"<p>Set plain text message body.</p>","abstract":false,"args":[{"name":"message_body","doc":null,"default_value":"","external_name":"message_body","restriction":"String"}],"args_string":"(message_body : String)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L320","def":{"name":"message","args":[{"name":"message_body","doc":null,"default_value":"","external_name":"message_body","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@body.data = message_body"}},{"id":"message_html(message_body:String)-instance-method","html_id":"message_html(message_body:String)-instance-method","name":"message_html","doc":"Set html text message body.","summary":"<p>Set html text message body.</p>","abstract":false,"args":[{"name":"message_body","doc":null,"default_value":"","external_name":"message_body","restriction":"String"}],"args_string":"(message_body : String)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L325","def":{"name":"message_html","args":[{"name":"message_body","doc":null,"default_value":"","external_name":"message_body","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@body_html.data = message_body"}},{"id":"message_id(header_body:String)-instance-method","html_id":"message_id(header_body:String)-instance-method","name":"message_id","doc":"Set **Message-Id** header.","summary":"<p>Set <strong>Message-Id</strong> header.</p>","abstract":false,"args":[{"name":"header_body","doc":null,"default_value":"","external_name":"header_body","restriction":"String"}],"args_string":"(header_body : String)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L384","def":{"name":"message_id","args":[{"name":"header_body","doc":null,"default_value":"","external_name":"header_body","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:message_id].set(header_body)"}},{"id":"message_resource(file_path:String,cid:String,file_name:String?=nil,mime_type:String?=nil)-instance-method","html_id":"message_resource(file_path:String,cid:String,file_name:String?=nil,mime_type:String?=nil)-instance-method","name":"message_resource","doc":"Add message resource file, such as images or stylesheets for the html message, from given file path.\n\nAlmost same as `#attach` expect this require `cid` argument.","summary":"<p>Add message resource file, such as images or stylesheets for the html message, from given file path.</p>","abstract":false,"args":[{"name":"file_path","doc":null,"default_value":"","external_name":"file_path","restriction":"String"},{"name":"cid","doc":null,"default_value":"","external_name":"cid","restriction":"String"},{"name":"file_name","doc":null,"default_value":"nil","external_name":"file_name","restriction":"String | ::Nil"},{"name":"mime_type","doc":null,"default_value":"nil","external_name":"mime_type","restriction":"String | ::Nil"}],"args_string":"(file_path : String, cid : String, file_name : String? = <span class=\"n\">nil</span>, mime_type : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L347","def":{"name":"message_resource","args":[{"name":"file_path","doc":null,"default_value":"","external_name":"file_path","restriction":"String"},{"name":"cid","doc":null,"default_value":"","external_name":"cid","restriction":"String"},{"name":"file_name","doc":null,"default_value":"nil","external_name":"file_name","restriction":"String | ::Nil"},{"name":"mime_type","doc":null,"default_value":"nil","external_name":"mime_type","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @body_resources.has_key?(cid)\n  raise(EMail::Error::MessageError.new(\"CID #{cid} already exists.\"))\nend\n@body_resources[cid] = EMail::Content::AttachmentFile.new(file_path, file_id: cid, file_name: file_name, mime_type: mime_type)\n"}},{"id":"message_resource(io:IO,cid:String,file_name:String,mime_type:String?=nil)-instance-method","html_id":"message_resource(io:IO,cid:String,file_name:String,mime_type:String?=nil)-instance-method","name":"message_resource","doc":"Add message resource file, such as images or stylesheets for the html message, read from given IO.\n\nAlmost same as `#attach` expect this require `cid` argument.","summary":"<p>Add message resource file, such as images or stylesheets for the html message, read from given IO.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"cid","doc":null,"default_value":"","external_name":"cid","restriction":"String"},{"name":"file_name","doc":null,"default_value":"","external_name":"file_name","restriction":"String"},{"name":"mime_type","doc":null,"default_value":"nil","external_name":"mime_type","restriction":"String | ::Nil"}],"args_string":"(io : IO, cid : String, file_name : String, mime_type : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L355","def":{"name":"message_resource","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"cid","doc":null,"default_value":"","external_name":"cid","restriction":"String"},{"name":"file_name","doc":null,"default_value":"","external_name":"file_name","restriction":"String"},{"name":"mime_type","doc":null,"default_value":"nil","external_name":"mime_type","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @body_resources.has_key?(cid)\n  raise(EMail::Error::MessageError.new(\"CID #{cid} already exists.\"))\nend\n@body_resources[cid] = EMail::Content::AttachmentFile.new(io, file_id: cid, file_name: file_name, mime_type: mime_type)\n"}},{"id":"reply_to(mail_address:String,sender_name:String?=nil)-instance-method","html_id":"reply_to(mail_address:String,sender_name:String?=nil)-instance-method","name":"reply_to","doc":"Add email address to **Reply-To** header.","summary":"<p>Add email address to <strong>Reply-To</strong> header.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"},{"name":"sender_name","doc":null,"default_value":"nil","external_name":"sender_name","restriction":"String | ::Nil"}],"args_string":"(mail_address : String, sender_name : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L419","def":{"name":"reply_to","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"},{"name":"sender_name","doc":null,"default_value":"nil","external_name":"sender_name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:reply_to].add(mail_address, sender_name)"}},{"id":"reply_to(mail_address:EMail::Address)-instance-method","html_id":"reply_to(mail_address:EMail::Address)-instance-method","name":"reply_to","doc":"Add email address to **Reply-To** header.","summary":"<p>Add email address to <strong>Reply-To</strong> header.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"EMail::Address"}],"args_string":"(mail_address : EMail::Address)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L419","def":{"name":"reply_to","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"EMail::Address"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:reply_to].add(mail_address)"}},{"id":"return_path(mail_address:EMail::Address)-instance-method","html_id":"return_path(mail_address:EMail::Address)-instance-method","name":"return_path","doc":"Set email address to **Return-Path** header.","summary":"<p>Set email address to <strong>Return-Path</strong> header.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"EMail::Address"}],"args_string":"(mail_address : EMail::Address)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L400","def":{"name":"return_path","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"EMail::Address"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:return_path].set(mail_address)"}},{"id":"return_path(mail_address:String,sender_name:String?=nil)-instance-method","html_id":"return_path(mail_address:String,sender_name:String?=nil)-instance-method","name":"return_path","doc":"Set email address to **Return-Path** header.","summary":"<p>Set email address to <strong>Return-Path</strong> header.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"},{"name":"sender_name","doc":null,"default_value":"nil","external_name":"sender_name","restriction":"String | ::Nil"}],"args_string":"(mail_address : String, sender_name : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L400","def":{"name":"return_path","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"},{"name":"sender_name","doc":null,"default_value":"nil","external_name":"sender_name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:return_path].set(mail_address, sender_name)"}},{"id":"sender(mail_address:String,sender_name:String?=nil)-instance-method","html_id":"sender(mail_address:String,sender_name:String?=nil)-instance-method","name":"sender","doc":"Set email address to **Sender** header.","summary":"<p>Set email address to <strong>Sender</strong> header.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"},{"name":"sender_name","doc":null,"default_value":"nil","external_name":"sender_name","restriction":"String | ::Nil"}],"args_string":"(mail_address : String, sender_name : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L399","def":{"name":"sender","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"},{"name":"sender_name","doc":null,"default_value":"nil","external_name":"sender_name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:sender].set(mail_address, sender_name)"}},{"id":"sender(mail_address:EMail::Address)-instance-method","html_id":"sender(mail_address:EMail::Address)-instance-method","name":"sender","doc":"Set email address to **Sender** header.","summary":"<p>Set email address to <strong>Sender</strong> header.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"EMail::Address"}],"args_string":"(mail_address : EMail::Address)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L399","def":{"name":"sender","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"EMail::Address"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:sender].set(mail_address)"}},{"id":"subject(header_body:String)-instance-method","html_id":"subject(header_body:String)-instance-method","name":"subject","doc":"Set **Subject** header.","summary":"<p>Set <strong>Subject</strong> header.</p>","abstract":false,"args":[{"name":"header_body","doc":null,"default_value":"","external_name":"header_body","restriction":"String"}],"args_string":"(header_body : String)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L383","def":{"name":"subject","args":[{"name":"header_body","doc":null,"default_value":"","external_name":"header_body","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:subject].set(header_body)"}},{"id":"to(mail_address:String,sender_name:String?=nil)-instance-method","html_id":"to(mail_address:String,sender_name:String?=nil)-instance-method","name":"to","doc":"Add email address to **To** header.","summary":"<p>Add email address to <strong>To</strong> header.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"},{"name":"sender_name","doc":null,"default_value":"nil","external_name":"sender_name","restriction":"String | ::Nil"}],"args_string":"(mail_address : String, sender_name : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L416","def":{"name":"to","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"String"},{"name":"sender_name","doc":null,"default_value":"nil","external_name":"sender_name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:to].add(mail_address, sender_name)"}},{"id":"to(mail_address:EMail::Address)-instance-method","html_id":"to(mail_address:EMail::Address)-instance-method","name":"to","doc":"Add email address to **To** header.","summary":"<p>Add email address to <strong>To</strong> header.</p>","abstract":false,"args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"EMail::Address"}],"args_string":"(mail_address : EMail::Address)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L416","def":{"name":"to","args":[{"name":"mail_address","doc":null,"default_value":"","external_name":"mail_address","restriction":"EMail::Address"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers[:to].add(mail_address)"}},{"id":"to_s(io:IO)-instance-method","html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/message.cr#L308","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preset_headers.each_value do |header|\n  if (header.name == \"Bcc\") || header.empty?\n  else\n    (io << header) << '\\n'\n  end\nend\n@custom_headers.each do |header|\n  (io << header) << '\\n'\nend\n(io << EMail::Header::MimeVersion.new) << '\\n'\nio << body_content\n"}}],"macros":[],"types":[]},{"html_id":"github.com/arcage/crystal-email/EMail/Sender","path":"EMail/Sender.html","kind":"alias","full_name":"EMail::Sender","name":"Sender","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"email/concurrent_sender.cr","line_number":156,"url":"https://github.com/arcage/crystal-email/blob/1442965f7af0e85c76e4ff6e979de3cf0a7a7cfc/src/email/concurrent_sender.cr"}],"repository_name":"github.com/arcage/crystal-email","program":false,"enum":false,"alias":true,"aliased":"EMail::ConcurrentSender","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/arcage/crystal-email/EMail","kind":"module","full_name":"EMail","name":"EMail"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}}