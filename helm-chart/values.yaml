replicaCount: 1

image:
  repository: registry.proton.name/proton/t.proton.name
  pullPolicy: Always
  tag: latest

imagePullSecrets: []
nameOverride: "t-proton-name-app"
fullnameOverride: "t-proton-name-chart"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
  className: "traefik"
  hosts:
    - host: t.proton.name
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: t-proton-name-tls
      hosts:
        - t.proton.name

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: content-volume
    persistentVolumeClaim:
      claimName: t-proton-name-content-pvc

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: content-volume
    mountPath: /content
    readOnly: true

    volumes:
      - ./t.proton.name/data:/content

nodeSelector: {}

tolerations: []

affinity: {}
